.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH LIVE\-BUILD 7 2017\-08\-29 1:20170807kali1 "Projet Debian Live"

.SH NOM
\fBlive\-build\fP \- la suite d'outils Debian Live

.SH SYNOPSIS
.\" FIXME
.\" FIXME
\fBlb \fP\fICOMMAND\fP [\fB\-h|\-\-help\fP] [\fB\-u|\-\-usage\fP] [\fB\-v|\-\-version\fP]
[\fB\-\-breakpoints\fP] [\fB\-\-conffile\fP] [\fB\-\-debug\fP] [\fB\-\-force\fP] [\fB\-\-quiet\fP]
[\fB\-\-verbose\fP]

.SH DESCRIPTION
.\" FIXME
live\-build est un ensemble de scripts pour construire des images de système
live. L'idée derrière live\-build est une suite d'outils qui utilise un
répertoire de configuration pour automatiser complètement et personnaliser
tous les aspects de la construction d'une image Live.
.PP
La \fICOMMANDE\fP est un nom d'une commande live\-build (voir ci\-dessous).
.PP
.\" FIXME
More documentation about how to use live\-build is available in the
individual manpages for each helper and in the manual at
<\fIhttps://debian\-live.alioth.debian.org/manual/\fP>.

.SH OPTIONS
.\" FIXME
.SS "Options live\-build partagées"
Les options en ligne de commande suivantes sont supportées par l'ensemble
des programmes live\-build.
.IP "\fB\-h, \-\-help\fP" 4
affiche l'aide et quitte
.IP "\fB\-u, \-\-usage\fP" 4
affiche l'utilisation et quitte
.IP "\fB\-v, \-\-version\fP" 4
affiche les informations de version et quitte
.SS "Options live\-build communes"
Les options de lignes de commandes suivantes sont supportées par la plupart
des programmes live\-build. Voir la page de manuel de chaque programme pour
une explication complète de ce que chaque option fait.
.IP \fB\-\-breakpoints\fP 4
lance avec des points d'arrêt (breakpoints).
.IP \fB\-\-conffile\fP 4
utilise un fichier de configuration personnalisé.
.IP \fB\-\-debug\fP 4
affiche des informations de déboguage.
.IP \fB\-\-force\fP 4
force l'exécution d'un assistant, même si le fichier de stage existe.
.IP \fB\-\-quiet\fP 4
soit discret.
.IP \fB\-\-verbose\fP 4
.\" FIXME
soit verbeux.

.SH "COMMANDES LIVE\-BUILD"
.\" FIXME
Nous divisons live\-build entre des commandes de haut\-niveau ("porcelaine")
et de bas\-niveau ("plomberie").
.PP
.\" FIXME
Voici une liste complète de toutes les commandes live\-build
disponibles. Consultez leurs pages de manuel pour obtenir de la
documentation additionnelle.

.SH "COMMANDES HAUT\-NIVEAU (PORCELAINE)"
.\" FIXME
Nous séparons les commandes porcelaine en commandes principales et en
utilitaires utilisateur auxiliaires.
.SS "Commandes porcelaine principales"
.IP "\fBlb config\fP(1)" 4
creates configuration for live\-build
.IP "\fBlb bootstrap\fP(1)" 4
executes the first build stage, creating (bootstraping) a basic Debian root
filesystem
.IP "\fBlb chroot\fP(1)" 4
executes the second build stage, building the live OS filesystem
.IP "\fBlb installer\fP(1)" 4
executes the third build stage, obtaining installer components (optional)
.IP "\fBlb binary\fP(1)" 4
executes the fourth build stage, generating a binary image
.IP "\fBlb source\fP(1)" 4
executes the fifth build stage, generating a source image (optional)
.IP "\fBlb clean\fP(1)" 4
cleans up system build directories
.SS "Commandes auxiliaires"
.IP \fBlb\fP(1) 4
generic live\-build script execution wrapper
.IP "\fBlb build\fP(1)" 4
.\" FIXME
alias for all build stages

.SH "LOW\-LEVEL COMMANDS (PLUMBING) \- BUILD STAGE COMPONENTS"
.\" FIXME
Le travail réel de live\-build est implémenté dans les commandes bas\-niveau,
appelées plomberie. Elles ne sont pas supposées être utilisées par les
utilisateurs finaux, ils devraient rester avec les porcelaines puisqu'elles
s'assurent que toutes les différentes commandes de plomberie sont exécutées
dans le bon ordre. Toutefois, si vous prévoyez de ré\-utiliser les commandes
live\-build dans vos propres scripts, alors les plomberies pourraient vous
intéresser.
.PP
Notez que l'interface (ensemble des options et des semantiques) de ces
commandes bas\-niveau sont pensées pour être beaucoup plus stables que les
commandes de niveau Porcelaine. D'un autre côté, l'interface des commandes
Porcelaine sont sujettes à changement afin d'améliorer l'expérience de
l'utilisateur final.
.SS "Bootstrap stage specific commands"
.IP "\fBlb bootstrap_archives\fP(1)" 4
applies apt archive configuration
.IP "\fBlb bootstrap_cache\fP(1)" 4
in save mode, saves to cache a copy of the generated bootstrap directory,
and in restore mode, restores from cache a previously generated copy
.IP "\fBlb bootstrap_debootstrap\fP(1)" 4
creates (bootstrap) a basic Debian root filesystem using debootstrap(8)
.SS "Chroot stage specific commands"
.PP
Note: The following chroot_ prefixed commands are used in building the live
OS filesystem. Another set of similarly prefixed files are listed separately
(see further down).
.IP "\fBlb chroot_cache\fP(1)" 4
in save mode, saves to cache a copy of the chroot directory, and in restore
mode, restores from cache a previously generated copy
.IP "\fBlb chroot_firmware\fP(1)" 4
compiles a list of firmware packages to be installed in the live OS root
filesystem
.IP "\fBlb chroot_hacks\fP(1)" 4
executes local hacks against the live OS root filesystem, if any are
provided
.IP "\fBlb chroot_hooks\fP(1)" 4
executes local hooks against the live OS root filesystem, if any are
provided
.IP "\fBlb chroot_includes\fP(1)" 4
copies a set of local files from the config directory into the live OS root
filesystem, if any are provided
.IP "\fBlb chroot_install\-packages\fP(1)" 4
installs into the live OS root filesystem any packages listed in local
package lists
.IP "\fBlb chroot_interactive\fP(1)" 4
pauses the build process and starts an interactive shell from the live OS
root filesystem, providing an oportunity for manual modifications or
testing; note that this is (currently) usually executed with several chroot
prep modifications applied (see description of these further down)
.IP "\fBlb chroot_linux\-image\fP(1)" 4
compiles a list of kernel images to be installed in the live OS root
filesystem
.IP "\fBlb chroot_live\-packages\fP(1)" 4
installs a set of live system specific packages to the live OS root
filesystem
.IP "\fBlb chroot_package\-lists\fP(1)" 4
compiles a list of packages provided in the user\' local config to be
installed in the live OS root filesystem
.IP "\fBlb chroot_preseed\fP(1)" 4
installs pre\-configured answers to certain install prompts into the live OS
root filesystem
.SS "Installer stage specific commands"
.IP "\fBlb installer_debian\-installer\fP(1)" 4
obtains and sets up Debian installer(d\-i) components
.IP "\fBlb installer_preseed\fP(1)" 4
installs pre\-configured answers to certain install prompts
.SS "Binary stage specific commands"
.IP "\fBlb binary_checksums\fP(1)" 4
creates checksums (md5, sha1, and/or sha256) for live image content
.IP "\fBlb binary_chroot\fP(1)" 4
duplicates the chroot directory, to place a copy of what whould be the
completed live OS root filesystem to one side, allowing the original to
continue to be used in executing certain parts of the remainder of the build
process
.IP "\fBlb binary_disk\fP(1)" 4
creates disk information files to be added to live image
.IP "\fBlb binary_grub\fP(1)" 4
installs grub into live image to provide image boot capability
.IP "\fBlb binary_grub2\fP(1)" 4
installs grub2 into live image to provide image boot capability
.IP "\fBlb binary_hdd\fP(1)" 4
compiles the final live image into an hdd image file
.IP "\fBlb binary_hooks\fP(1)" 4
executes local hooks against the live image, if any are provided
.IP "\fBlb binary_includes\fP(1)" 4
copies a set of local files from the config directory into the live image,
if any are provided
.IP "\fBlb binary_iso\fP(1)" 4
compiles the final live image into an iso file
.IP "\fBlb binary_linux\-image\fP(1)" 4
copies the linux\-image into the live image
.IP "\fBlb binary_loadlin\fP(1)" 4
bundles a copy of loadlin into the live image
.IP "\fBlb binary_manifest\fP(1)" 4
creates manifest of packages installed into live OS filesystem, and list of
packages to be excluded by a persistence mechanism installing the live OS to
disk
.IP "\fBlb binary_memtest\fP(1)" 4
bundles a copy of memtest into the live image
.IP "\fBlb binary_netboot\fP(1)" 4
compiles the final live image into a netboot tar archive
.IP "\fBlb binary_package\-lists\fP(1)" 4
processes local lists of packages to obtain and bundle into image (from
which they could later be installed if not already)
.IP "\fBlb binary_rootfs\fP(1)" 4
wraps up the completed live OS root filesystem into a virtual file system
image
.IP "\fBlb binary_syslinux\fP(1)" 4
installs syslinux into live image to provide image boot capability
.IP "\fBlb binary_tar\fP(1)" 4
compiles the final live image into a tar archive
.IP "\fBlb binary_win32\-loader\fP(1)" 4
bundles a copy of win32\-loader into the live image and creates an
autorun.inf file
.IP "\fBlb binary_zsync\fP(1)" 4
builds zsync control files
.SS "Source stage specific commands"
.IP "\fBlb source_checksums\fP(1)" 4
creates checksums (md5, sha1, and/or sha256) for source image content
.IP "\fBlb source_debian\fP(1)" 4
downloads source packages for bundling into source image
.IP "\fBlb source_disk\fP(1)" 4
creates disk information files to be added to source image
.IP "\fBlb source_hdd\fP(1)" 4
compiles the final source image into an hdd image file
.IP "\fBlb source_hooks\fP(1)" 4
executes local hooks against the source image, if any are provided
.IP "\fBlb source_iso\fP(1)" 4
compiles the final source image into an iso file
.IP "\fBlb source_live\fP(1)" 4
copies live\-build config into source
.IP "\fBlb source_tar\fP(1)" 4
.\" FIXME
compiles the final source image into a tar archive

.SH "LOW\-LEVEL COMMANDS (PLUMBING) \- CHROOT PREP COMPONENTS"
.\" FIXME
The notes above under the section regarding build\-stage specific low\-level
plumbing commands also apply here.
.PP
The following chroot_ prefixed commands are used throughout the various
primary stages of the build process to apply and remove modifications to a
chroot root filesystem. Generally these are used to apply modification that
setup the chroot for use (execution of programs within it) during the build
process, and later to remove those modification, unmounting things that were
mounted, and making the chroot suitable for use as the root filesystem of
the live OS to be bundled into the live image.
.IP "\fBlb chroot_apt\fP(1)" 4
manages apt configuration; in apply mode it applies configuration for use
during build process, and in remove mode removes that configuration
.IP "\fBlb chroot_archives\fP(1)" 4
manages apt archive source lists; in apply mode it applies source list
configurations suitable for use of the chroot in the build process, and in
remove mode replaces that with a configuration suitable for the final live
OS
.IP "\fBlb chroot_debianchroot\fP(1)" 4
manages a /etc/debian_chroot file
.IP "\fBlb chroot_devpts\fP(1)" 4
manages mounting of /dev/pts
.IP "\fBlb chroot_dpkg\fP(1)" 4
manages dpkg; in apply mode disabling things like the start\-stop\-daemon, and
in remove mode enabling them again
.IP "\fBlb chroot_hostname\fP(1)" 4
manages the hostname configuration
.IP "\fBlb chroot_hosts\fP(1)" 4
manages the /etc/hosts file
.IP "\fBlb chroot_proc\fP(1)" 4
manages mounting of /proc
.IP "\fBlb chroot_resolv\fP(1)" 4
manages configuration of the /etc/resolv.conf file
.IP "\fBlb chroot_selinuxfs\fP(1)" 4
manages mounting of /sys/fs/selinux
.IP "\fBlb chroot_sysfs\fP(1)" 4
manages mounting of /sys
.IP "\fBlb chroot_sysv\-rc\fP(1)" 4
manages the /usr/sbin/policy\-rc.d file
.IP "\fBlb chroot_tmpfs\fP(1)" 4
manages configuration of dpkg to use a tmpfs filesystem
.IP "\fBlb chroot_upstart\fP(1)" 4
.\" FIXME
manages use of upstart /sbin/initctl program; in apply mode blocking
execution through a dpkg diversion, and in remove mode enabling execution
again

.SH "FICHIERS DE CONFIGURATION"
.\" FIXME
Plusieurs commandes live\-build utilisent des fichiers dans le répertoire
\fIconfig/\fP pour contrôler ce qu'elles font. En plus du \fIconfig/common\fP
commun, qui est utilisé par toutes les commandes live\-build, plusieurs
fichiers additionels peuvent être utilisés pour configurer le comportement
de commandes live\-build spécifiques. Ces fichiers sont typiquement nommés
config/stage ou config/stage_assistant (où "stage" est évidemment remplacé
par le nom du stage auquel il appartient, "assistant" par le nom de
l'assistant).
.PP
For example, lb bootstrap_debootstrap uses files named config/bootstrap and
config/bootstrap_debootstrap to read the options it will use. See the man
pages of individual commands for details about the names and formats of the
files they use. Generally, these files contain variables with values
assigned, one variable per line. Some programs in live\-build use pairs of
values or slightly more complicated variable assignments.
.PP
Notez que live\-build respectera les variables d'environment présentes dans
le contexte du shell lancé. Si les variables peuvent être lues depuis les
fichiers de configuration, alors elles prennent le pas sur les variables
d'environement, et si les options en ligne de commande sont utilisées, elles
sont prioritaires sur les fichiers de configuration. Si pour une variable
donnée, aucune valeur ne peut être trouvée et donc, est non\-paramétrèe,
live\-build la paramètrera automatiquement à la valeur par défaut.
.PP
Dans de rares cas, vous pourriez vouloir avoir différentes versions de ces
fichiers pour différentes architectures ou distributions. Si des fichiers
nommés config/stage.arch ou config/stage_assistant.arch, et
config/stage.dist ou config/stage_assistant.dist existent, où "arch" est
équivalent à la sortie de "dpkg \-\-print\-architecture" et "dist" équivalent
au nom de code de la distribution cible, alors ils seront utilisés en
priorité aux autres fichier plus généraux.
.PP
.\" FIXME
Tous les fichiers de configuration sont des scripts shell qui sont sourcés
par un programme live\-build. Ceci signifie qu'ils doivent suivre la syntaxe
de shell normale. Vous pouvez également mettre des commentaires dans ces
fichiers; les lignes commençant par des "#" sont ignorées.

.SH FICHIERS
.IP \fB/etc/live/build.conf\fP 4
.IP \fB/etc/live/build/*\fP 4

.SH "VOIR AUSSI"
\fIlive\-boot\fP(7)
.PP
\fIlive\-config\fP(7)
.PP
Ce programme est une partie de live\-build.

.SH "PAGE D'ACCUEIL"
More information about live\-build and the Debian Live project can be found
on the homepage at <\fIhttps://debian\-live.alioth.debian.org/\fP>.

.SH BOGUES
Les bogues peuvent être signalés en soumettant un rapport de bogue pour le
paquet live\-build dans le BTS à <\fIhttp://bugs.debian.org/\fP> ou par
l'écriture d'un courriel à la liste de diffusion Debian Live à
<\fIdebian\-live@lists.debian.org\fP>.

.SH AUTEUR
live\-images a été écrit par Daniel Baumann
<\fImail@daniel\-baumann.ch\fP>.
