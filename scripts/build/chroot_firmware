#!/bin/sh

## live-build(7) - System Build Scripts
## Copyright (C) 2016-2020 The Debian Live team
## Copyright (C) 2006-2015 Daniel Baumann <mail@daniel-baumann.ch>
##
## This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.


set -e

# Including common functions
[ -e "${LIVE_BUILD}/scripts/build.sh" ] && . "${LIVE_BUILD}/scripts/build.sh" || . /usr/lib/live/build.sh

# Setting static variables
DESCRIPTION="Schedule firmware packages for installation"
USAGE="${PROGRAM} [--force]"

# Processing arguments and configuration files
Init_config_data "${@}"

if [ "${LB_FIRMWARE_CHROOT}" != "true" ]
then
	exit 0
fi

Echo_message "Begin scheduling firmware installation..."

# Requiring stage file
Require_stagefiles config bootstrap

# Checking stage file
Check_stagefile

# Acquire lock file
Acquire_lockfile

# Checking depends
Check_package host /usr/bin/wget wget

# Diverting update-initramfs
#case "${LB_INITRAMFS}" in
#	live-boot)
#		mv chroot/usr/sbin/update-initramfs chroot/usr/sbin/update-initramfs.live-build
#		;;
#esac

# Include firmware packages

# Get all firmware packages names

FIRMWARE_PACKAGES=""

# Manually add firmware-linux/non-free meta package
if [ "${LB_DERIVATIVE}" = "false" ] && In_list "non-free" ${LB_PARENT_ARCHIVE_AREAS}; then
	FIRMWARE_PACKAGES="${FIRMWARE_PACKAGES} firmware-linux"
fi

Firmware_List_From_Contents "${LB_PARENT_MIRROR_CHROOT}" "${LB_PARENT_DISTRIBUTION_CHROOT}" "${LB_PARENT_ARCHIVE_AREAS}"

if [ "${LB_DERIVATIVE}" = "true" ]
then
	# Avoid downloading things twice if distributions are identical
	DERIVATIVE_ARCHIVE_AREAS=""
	if [ "${LB_DISTRIBUTION_CHROOT}" != "${LB_PARENT_DISTRIBUTION_CHROOT}" ]
	then
		DERIVATIVE_ARCHIVE_AREAS="${LB_ARCHIVE_AREAS}"
	else
		for _ARCHIVE_AREA in ${LB_ARCHIVE_AREAS}
		do
			if ! In_list ${_ARCHIVE_AREA} ${LB_PARENT_ARCHIVE_AREAS}
			then
				DERIVATIVE_ARCHIVE_AREAS="${DERIVATIVE_ARCHIVE_AREAS} ${_ARCHIVE_AREA}"
			fi
		done
	fi

	if [ ! -z "${DERIVATIVE_ARCHIVE_AREAS}" ]
	then
		Firmware_List_From_Contents "${LB_MIRROR_CHROOT}" "${LB_DISTRIBUTION_CHROOT}" "${DERIVATIVE_ARCHIVE_AREAS}"
	fi
fi

# Drop section and keep package names only
for _PACKAGE in ${FIRMWARE_PACKAGES}
do
	echo $(echo ${_PACKAGE} | awk -F/ '{ print $NF }') >> chroot/root/packages.chroot
done

# Some known licenses required to be accepted
if In_list "non-free" ${LB_PARENT_ARCHIVE_AREAS}; then

cat >> chroot/root/packages.chroot.cfg << EOF
firmware-ivtv firmware-ivtv/license/accepted boolean true
firmware-ipw2x00 firmware-ipw2x00/license/accepted boolean true
EOF

fi

# Creating stage file
Create_stagefile
